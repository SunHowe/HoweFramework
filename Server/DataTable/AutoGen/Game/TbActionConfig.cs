
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Newtonsoft.Json.Linq;
using Luban;



namespace DataTable.Game
{

    public class TbActionConfig : IDataTable
    {
        private readonly System.Collections.Generic.Dictionary<int, Game.ActionConfig> _dataMap;
        private readonly System.Collections.Generic.List<Game.ActionConfig> _dataList;
        
        public TbActionConfig(JArray _buf)
        {
            _dataMap = new System.Collections.Generic.Dictionary<int, Game.ActionConfig>();
            _dataList = new System.Collections.Generic.List<Game.ActionConfig>();
            
            foreach(JObject _ele in _buf)
            {
                Game.ActionConfig _v;
                _v = Game.ActionConfig.DeserializeActionConfig(_ele);
                _dataList.Add(_v);
                _dataMap.Add(_v.Id, _v);
            }
        }


        public System.Collections.Generic.Dictionary<int, Game.ActionConfig> DataMap => _dataMap;
        public System.Collections.Generic.List<Game.ActionConfig> DataList => _dataList;

        public Game.ActionConfig GetOrDefault(int key) => _dataMap.TryGetValue(key, out var v) ? v : null;
        public Game.ActionConfig Get(int key) => _dataMap[key];
        public Game.ActionConfig this[int key] => _dataMap[key];

        public void ResolveRef(DataTableList tables)
        {
            foreach(var _v in _dataList)
            {
                _v.ResolveRef(tables);
            }
        }

    }
}

